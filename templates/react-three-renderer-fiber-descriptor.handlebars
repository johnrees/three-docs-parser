import * as THREE from "three";
import {{{className}}} from "three";
import {IObject3DProps, Object3DDescriptorBase} from "./object3D";

interface I{{className}}Props extends IObject3DProps {
  color?: number | string;
  intensity?: number;
  distance?: number;
  decay?: number;
}

declare global {
  namespace JSX {
    interface IntrinsicElements {
      {{camelName}}: IThreeElementPropsBase<{{className}}> & I{{className}}Props;
    }
  }
}

class {{className}}Descriptor extends Object3DDescriptorBase<I{{className}}Props,
  {{className}}> {

  constructor() {
    super();

    this.hasProp("color", (instance: {{className}},
                           newValue: any): void => {
      instance.color.set(newValue);
    }, false);
  }

  public createInstance(props: I{{className}}Props) {
    return new THREE.{{className}}(
      props.color,
      props.intensity,
      props.distance,
      props.decay);
  }
}

export default {{className}}Descriptor;
